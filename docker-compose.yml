services:
  postgres:
    image: postgres:17
    environment:
      POSTGRES_DB: astro_db_name
      POSTGRES_USER: astro_db_user
      POSTGRES_PASSWORD: astro_db_password
    ports:
      - '5432:5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init/roadmap.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U astro_db_user -d astro_db_name']
      interval: 30s
      timeout: 15s
      retries: 3
    networks:
      - datum-network
    restart: unless-stopped

  dev:
    build:
      context: .
      target: development
    ports:
      - '4321:4321'
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - GH_ACCESS_TOKEN=${GH_ACCESS_TOKEN}
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    networks:
      - datum-network
    command: npm run dev -- --host 0.0.0.0 --port 4321

  prod:
    build:
      context: .
      target: production
    ports:
      - '4321:4321'
    environment:
      - NODE_ENV=production
      - HOST=0.0.0.0
      - PORT=4321
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - datum-network
    restart: unless-stopped

networks:
  datum-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
