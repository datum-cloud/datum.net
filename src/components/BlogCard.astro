---
import { Image } from 'astro:assets';
import { formatLongDate, formatISODate } from '@utils/dateUtils';
import { getCollectionEntry } from '@utils/collectionUtils';
import type { slug } from '@utils/collectionUtils';

const { post } = Astro.props;

// Get author data if available
let authorData = null;
if (post.data.author) {
  authorData = await getCollectionEntry('authors', post.data.author);
}

// Get category data for each category
const categoryData = await Promise.all(
  (post.data.categories || []).map(async (categorySlug: slug) => {
    return await getCollectionEntry('categories', categorySlug);
  })
);
---

<article class="overflow-hidden transition">
  {
    post.data.thumbnail && (
      <a href={`/blog/${post.id}`} class="block aspect-video overflow-hidden">
        <Image
          src={post.data.thumbnail}
          alt={post.data.title}
          class="h-full w-full object-cover transition hover:scale-105"
          widths={[400, 600, 800]}
          sizes="(max-width: 640px) 400px, (max-width: 1024px) 600px, 800px"
        />
      </a>
    )
  }
  <div class="py-6">
    <div class="mb-2 flex items-center gap-4 text-sm text-gray-500">
      <time datetime={formatISODate(post.data.date)}>
        {formatLongDate(post.data.date)}
      </time>
      {
        post.data.author && (
          <a href={`/authors/${post.data.author}`} class="hover:text-primary">
            By {authorData?.data.name || post.data.author}
          </a>
        )
      }
    </div>
    <h2 class="font-heading mb-2 line-clamp-2 text-xl font-bold">
      <a href={`/blog/${post.id}`} class="hover:text-primary">
        {post.data.title}
      </a>
    </h2>
    <p class="mb-4 line-clamp-3 text-gray-600">{post.data.description}</p>

    <!-- Categories -->
    {
      categoryData.length > 0 && (
        <div class="mb-4">
          <div class="flex flex-wrap gap-2">
            {categoryData.map((category) => (
              <a
                href={`/blog/${category.id}`}
                class="inline-flex items-center rounded-full bg-gray-100 px-2 py-0.5 text-xs font-medium text-gray-700 transition-colors hover:bg-gray-200"
              >
                {category.data.name}
              </a>
            ))}
          </div>
        </div>
      )
    }

    <a
      href={`/blog/${post.id}`}
      class="text-primary inline-flex items-center font-medium hover:underline"
    >
      Read More
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="ml-1 h-4 w-4"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"
        ></path>
      </svg>
    </a>
  </div>
</article>
