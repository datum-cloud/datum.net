---
import { Image } from 'astro:assets';
import { formatISODate } from '@utils/dateUtils';
import { getCollectionEntry } from '@utils/collectionUtils';
import type { slug } from '@utils/collectionUtils';

const { post } = Astro.props;

// Get author data if available
let authorData = null;
if (post.data.author) {
  authorData = await getCollectionEntry('authors', post.data.author);
}

// Get category data for each category
const categoryData = await Promise.all(
  (post.data.categories || []).map(async (categorySlug: slug) => {
    return await getCollectionEntry('categories', categorySlug);
  })
);
---

<article class="group border-b border-gray-100 last:border-b-0">
  <div class="flex items-center gap-6 px-4 py-4 transition-colors hover:bg-gray-50">
    <!-- Left side: Title -->
    <div class="min-w-0 flex-1">
      <h2 class="text-base font-medium text-gray-900 transition-colors group-hover:text-blue-600">
        <a href={`/blog/${post.id}`} class="block">
          {post.data.title}
        </a>
      </h2>
    </div>

    <!-- Center: Author avatars -->
    <div class="flex items-center gap-2">
      {
        post.data.author && authorData && (
          <div class="flex -space-x-1">
            {authorData.data.avatar ? (
              <Image
                src={authorData.data.avatar}
                alt={authorData.data.name}
                class="h-6 w-6 rounded-full border-2 border-white ring-1 ring-gray-200"
                width={24}
                height={24}
              />
            ) : (
              <div class="flex h-6 w-6 items-center justify-center rounded-full bg-gradient-to-br from-blue-400 to-blue-600 text-xs font-medium text-white ring-1 ring-gray-200">
                {authorData.data.name.charAt(0).toUpperCase()}
              </div>
            )}
          </div>
        )
      }
    </div>

    <!-- Center-Right: Category badge -->
    <div class="flex items-center">
      {
        categoryData
          .slice(0, 1)
          .map((category) => (
            <span class="inline-flex items-center rounded-full bg-gray-100 px-3 py-1 text-xs font-medium text-gray-700">
              {category.data.name}
            </span>
          ))
      }
    </div>

    <!-- Right side: Date -->
    <div class="min-w-[100px] text-right text-sm whitespace-nowrap text-gray-500">
      <time datetime={formatISODate(post.data.date)}>
        {
          new Date(post.data.date).toLocaleDateString('en-US', {
            month: 'short',
            day: 'numeric',
            year: 'numeric',
          })
        }
      </time>
    </div>
  </div>
</article>
