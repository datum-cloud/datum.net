---
// src/components/NavBrand.astro
import navigation from '@data/navigation.json';
import type { NavData, NavFooterSection, NavItem } from '@/src/types/navigation';
import { getIcon } from '@utils/iconMap';

const { currentPath } = Astro.props;

// Type-safe navigation data
const navData = navigation as NavData;
const navBrand = navData.brand;

// Get the Lucide icons for menu toggle
const MenuIcon = getIcon('menu');
const XIcon = getIcon('x');
---

<nav
  class="brand-nav"
  x-data="{ open: false }"
  @click.away="open = false"
  @resize.window="if (window.innerWidth >= 768) open = false"
>
  <button
    class="brand-nav-mobile-toggle md:hidden"
    @click="open = !open"
    :aria-expanded="open"
    aria-controls="brand-nav-menu"
  >
    <span class="brand-nav-mobile-toggle--text">Menu</span>
    {
      MenuIcon && (
        <MenuIcon class="brand-nav-mobile-toggle--icon" x-show="!open" width="16" height="16" />
      )
    }
    {XIcon && <XIcon class="brand-nav-mobile-toggle--icon" x-show="open" width="16" height="16" />}
  </button>

  <div id="brand-nav-menu" class="brand-nav-menu" x-show="open" x-transition style="display: none;">
    {
      navBrand &&
        navBrand.map((section: NavFooterSection) => (
          <div class="brand-nav-section">
            <ul class="brand-nav-items">
              {section.items?.map((item: NavItem) => {
                const isActive = currentPath === item.href;
                return (
                  <li class="brand-nav-item">
                    <a
                      href={item.href}
                      class={`brand-nav-link ${isActive ? 'active' : ''}`}
                      data-astro-prefetch="hover"
                      @click="open = false"
                    >
                      {item.text}
                    </a>
                  </li>
                );
              })}
            </ul>
          </div>
        ))
    }
  </div>
</nav>
