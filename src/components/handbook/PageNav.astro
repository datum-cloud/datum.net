---
import { getCollection } from 'astro:content';

const { currentArticleId, class: className } = Astro.props as {
  currentArticleId: string;
  class?: string;
};

const handbooks = await getCollection('handbooks');

// Sort handbooks by category and order for navigation
const sortedHandbooks = handbooks
  .filter((h) => !h.data.draft)
  .sort((a, b) => {
    const categoryA = a.id.split('/')[0];
    const categoryB = b.id.split('/')[0];

    // First sort by category
    if (categoryA !== categoryB) {
      const categoryOrder = ['company', 'people', 'engineering', 'go-to-market'];
      const indexA = categoryOrder.indexOf(categoryA);
      const indexB = categoryOrder.indexOf(categoryB);
      return (indexA === -1 ? 999 : indexA) - (indexB === -1 ? 999 : indexB);
    }

    // Then sort by order within category
    const orderA = a.data.sidebar?.order || 0;
    const orderB = b.data.sidebar?.order || 0;
    return orderA - orderB;
  });

// Find current article index for navigation
const currentIndex = sortedHandbooks.findIndex((h) => h.id === currentArticleId);
const previousArticle = currentIndex > 0 ? sortedHandbooks[currentIndex - 1] : undefined;
const nextArticle =
  currentIndex < sortedHandbooks.length - 1 ? sortedHandbooks[currentIndex + 1] : undefined;
---

{
  (previousArticle || nextArticle) && (
    <nav class:list={['handbook-page-nav', className]}>
      {previousArticle && (
        <a href={`/about/handbook/${previousArticle.id}`} class="handbook-page-nav-link">
          <span class="handbook-page-nav-label">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke-width="1.5"
              stroke="currentColor"
              class="handbook-page-nav-icon"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                d="M10.5 19.5 3 12m0 0 7.5-7.5M3 12h18"
              />
            </svg>
            <span>Previous</span>
          </span>
          <span class="handbook-page-nav-title">{previousArticle.data.title}</span>
        </a>
      )}
      {nextArticle && (
        <a href={`/about/handbook/${nextArticle.id}`} class="handbook-page-nav-link--next">
          <span class="handbook-page-nav-label--next">
            <span>Next</span>
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke-width="1.5"
              stroke="currentColor"
              class="handbook-page-nav-icon"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                d="M13.5 4.5 21 12m0 0-7.5 7.5M21 12H3"
              />
            </svg>
          </span>
          <span class="handbook-page-nav-title">{nextArticle.data.title}</span>
        </a>
      )}
    </nav>
  )
}
