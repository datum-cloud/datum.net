---
import { Image } from 'astro:assets';
import sceneTree from '@v1/assets/images/scene-tree.png';
import asideNote from '@v1/assets/images/aside-note.png';
import type { ContentProps } from '@/src/types/common';

const { content } = Astro.props as ContentProps;

// Create 6 columns, each with 3 specific logos
const logoColumns = [];
if (content.data.images) {
  for (let i = 0; i < 6; i++) {
    const columnLogos = [];
    for (let j = 0; j < 3; j++) {
      const logoIndex = i * 3 + j;
      if (logoIndex < content.data.images.length) {
        columnLogos.push({
          src: content.data.images[logoIndex].img,
          alt: content.data.images[logoIndex].alt || `Partner logo ${logoIndex + 1}`,
          index: logoIndex,
        });
      }
    }
    logoColumns.push({
      logos: columnLogos,
      delay: i * 1, // Stagger each column
    });
  }
}
---

<section class="bg-glacier-mist-700 section--block section--block--pad">
  <div class="absolute right-0 bottom-0 z-0 flex w-[663px]">
    <Image
      src={sceneTree}
      layout="constrained"
      alt="Scene tree illustration"
      class="ml-10 size-auto w-full max-w-3xl -scale-x-100 self-end"
    />
  </div>
  <div class="max-width">
    <div class="border-midnight-fjord bg-glacier-mist-700 relative z-10 m-auto border">
      <Image
        src={asideNote}
        layout="constrained"
        alt="Scene tree illustration"
        class="absolute -bottom-17 left-5 z-15 size-auto w-full max-w-67.25 md:-bottom-12 md:left-5 lg:-bottom-18 lg:-left-5 xl:-bottom-16 xl:-left-10"
      />
      <!-- Scene Tree Image -->
      <div
        class="fade-in--pure relative z-10 flex flex-col px-6 pt-8 pb-6 md:px-11 md:pt-11 lg:px-16 lg:pt-16 xl:px-20 xl:pt-20"
        data-reveal="fade-in--pure--visible"
        data-reveal-delay="100"
      >
        <div
          class="mx-auto mb-10 flex w-full flex-col justify-between gap-9 text-center md:mb-20 md:flex-row md:text-left lg:mb-20 xl:mb-24"
        >
          <!-- Left: Heading -->
          <div class="w-full max-w-none self-center md:max-w-55 lg:max-w-xs">
            <h2 class="datum-text-8xl">{content.data.title}</h2>
          </div>
          <!-- Right: Body Text -->
          <div class="max-w-115 flex-grow self-center">
            <span class="datum-text-lg">
              <p>{content.body}</p>
            </span>
          </div>
        </div>

        <div class="mb-2.5 block w-full py-2.5">
          <span
            class="after:bg-midnight-fjord datum-docs-sidebar-headings flex flex-col items-center justify-center gap-7.5 align-middle uppercase after:block after:h-[1px] after:w-full after:content-[''] md:flex-row"
          >
            <p class="mb-0 text-balance md:whitespace-nowrap">
              We're on a mission to serve and connect companies like these
            </p>
          </span>
        </div>

        <!-- Logos Row -->
        {
          content.data.images ? (
            <div>
              <div class="grid grid-cols-3 overflow-x-auto lg:grid-cols-6">
                {logoColumns.map((column, columnIndex) => (
                  <div class="flex aspect-29/21 items-center justify-center">
                    <div
                      class="logo-cycling-container relative flex h-full w-full items-center justify-center"
                      data-column-index={columnIndex}
                    >
                      {column.logos.map((logo, logoIndex) => (
                        <Image
                          src={logo.src}
                          alt={logo.alt}
                          class={`logo-cycle absolute mx-10 max-h-15 w-4/5 max-w-18 object-contain md:max-w-28 lg:max-w-40 ${logoIndex === 0 ? 'opacity-100' : 'opacity-0'}`}
                          data-logo-index={logo.index}
                          data-column-logo-index={logoIndex}
                        />
                      ))}
                    </div>
                  </div>
                ))}
              </div>
            </div>
          ) : (
            ''
          )
        }
      </div>
    </div>
  </div>
</section>

<style>
  .logo-cycle {
    transition: opacity 1s ease-in-out;
  }
</style>

<script>
  // Logo cycling functionality
  document.addEventListener('DOMContentLoaded', () => {
    const containers = document.querySelectorAll('.logo-cycling-container');

    containers.forEach((container) => {
      const columnIndex = parseInt(container.getAttribute('data-column-index') || '0');
      const logos = container.querySelectorAll('.logo-cycle');
      const totalLogos = logos.length;
      let currentIndex = 0;

      // Set initial logo
      logos.forEach((logo, index) => {
        if (index === currentIndex) {
          logo.classList.remove('opacity-0');
          logo.classList.add('opacity-100');
        } else {
          logo.classList.remove('opacity-100');
          logo.classList.add('opacity-0');
        }
      });

      // Cycle through logos with fade transition
      const cycleLogos = () => {
        // Hide current logo with fade out
        logos[currentIndex].classList.remove('opacity-100');
        logos[currentIndex].classList.add('opacity-0');

        // Move to next logo
        currentIndex = (currentIndex + 1) % totalLogos;

        // Show next logo with fade in after a longer delay
        setTimeout(() => {
          logos[currentIndex].classList.remove('opacity-0');
          logos[currentIndex].classList.add('opacity-100');
        }, 800); // Longer delay for smoother transition with slower fade
      };

      // Start cycling with staggered timing for each column
      const baseDelay = 8000; // 5 seconds cycle for longer pause between logo changes
      const columnDelay = columnIndex * 1000; // Increased stagger delay

      // Start the first cycle immediately (with column delay), then repeat every 5s
      setTimeout(() => {
        cycleLogos();
        setInterval(cycleLogos, baseDelay);
      }, columnDelay);
    });
  });
</script>
