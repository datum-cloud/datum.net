---
// src/pages/blog/[page].astro
import Layout from '@layouts/Layout.astro';
import { getCollection } from 'astro:content';
import config from '@data/siteConfig.json';
import { getCollectionEntry } from '@utils/collectionUtils';
import Pagination from '@components/Pagination.astro';
import BlogListItem from '@components/BlogListItem.astro';
import CategoryFilter from '@components/CategoryFilter.astro';

// Get blog landing page from blog/index.mdx
const page = await getCollectionEntry('pages', '/blog');

export async function getStaticPaths() {
  const allPosts = await getCollection('blog', ({ data }) => {
    return !data.draft && new Date(data.date) <= new Date();
  });

  const sortedPosts = allPosts.sort((a, b) => {
    return new Date(b.data.date).getTime() - new Date(a.data.date).getTime();
  });

  const pageSize = config.pageSize;
  const totalPages = Math.ceil(sortedPosts.length / pageSize);

  return Array.from({ length: totalPages - 1 }, (_, i) => {
    const pageNum = i + 2; // Start from page 2
    const start = (pageNum - 1) * pageSize;
    const end = start + pageSize;

    return {
      params: { page: pageNum.toString() },
      props: {
        posts: sortedPosts.slice(start, end),
        currentPage: pageNum,
        totalPages: totalPages,
        prevUrl: pageNum > 2 ? `/blog/${pageNum - 1}` : '/blog',
        nextUrl: pageNum < totalPages ? `/blog/${pageNum + 1}` : undefined,
      },
    };
  });
}

const { posts, currentPage, totalPages, prevUrl, nextUrl } = Astro.props;
---

<Layout title={page.data.title || 'Datum'} description={page.data.description}>
  <div class="mx-auto max-w-7xl">
    <div class="mb-8" data-pagefind-body>
      <h1 class="font-heading mb-6 text-4xl font-bold">Blog</h1>
      <p class="mb-8 text-gray-600">Latest articles, tutorials, and insights from our team.</p>

      <!-- Category Filter -->
      <CategoryFilter />

      <!-- Blog List -->
      <div class="blog-list bg-white">
        {posts.map((post) => <BlogListItem post={post} />)}
      </div>

      <!-- Pagination -->
      <div class="pagination">
        <Pagination
          currentPage={currentPage}
          totalPages={totalPages}
          baseUrl="/blog"
          prevUrl={prevUrl}
          nextUrl={nextUrl}
        />
      </div>
    </div>
  </div>
</Layout>
