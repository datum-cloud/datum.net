---
// src/pages/blog/[slug].astro
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import { Image } from 'astro:assets';

export async function getStaticPaths() {
  const blogEntries = await getCollection('blog');
  
  return blogEntries.map(entry => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();

// Format the date
const formattedDate = new Date(entry.data.date).toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
});

// For SEO, you need the image URL. When using the image helper, 
// we need to convert the image path to a URL
const getImageUrl = (img) => {
  if (!img) return undefined;
  // This is a simplified approach - in a real project, you might need to use
  // the Astro.site property and ensure the path is correct
  return new URL(img.src, Astro.url).href;
};

const metaImage = entry.data.featuredImage 
  ? getImageUrl(entry.data.featuredImage) 
  : entry.data.thumbnail 
    ? getImageUrl(entry.data.thumbnail) 
    : undefined;
---

<Layout 
  title={entry.data.title + " | Datum Inc. Blog"}
  description={entry.data.description}
  image={metaImage}
  article={true}
  publishDate={entry.data.date}
  author={entry.data.author}
>
  <article class="max-w-4xl mx-auto">
    <!-- Hero section -->
    <div class="bg-white rounded-lg shadow-sm overflow-hidden mb-8">
      {entry.data.featuredImage && (
        <div class="w-full aspect-video relative">
          <Image 
            src={entry.data.featuredImage} 
            alt={entry.data.title} 
            class="w-full h-full object-cover"
            widths={[800, 1200, 1600]}
            sizes="(max-width: 800px) 800px, (max-width: 1200px) 1200px, 1600px"
          />
        </div>
      )}
      
      <div class="p-8">
        <!-- Post metadata -->
        <div class="flex flex-wrap items-center text-sm text-gray-500 mb-4">
          <time datetime={entry.data.date.toISOString()}>
            {formattedDate}
          </time>
        </div>
        
        <h1 class="text-4xl font-bold font-heading mb-6">
          {entry.data.title}
        </h1>
        
        {entry.data.description && (
          <p class="text-xl text-gray-600 mb-6 font-light leading-relaxed">
            {entry.data.description}
          </p>
        )}
        
        {entry.data.author && (
          <div class="flex items-center mb-8">
            <div class="bg-gray-200 rounded-full w-10 h-10 flex items-center justify-center mr-3">
              <span class="text-lg font-bold text-gray-600">
                {entry.data.author.charAt(0)}
              </span>
            </div>
            <div>
              <p class="font-medium">{entry.data.author}</p>
            </div>
          </div>
        )}
        
        <!-- Post content -->
        <div class="prose lg:prose-xl max-w-none">
          <Content />
        </div>
      </div>
    </div>
  </article>
</Layout>