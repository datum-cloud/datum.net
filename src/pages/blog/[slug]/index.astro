---
import Layout from '@layouts/Layout.astro';
import Hero from '@components/Hero.astro';
import Footer from '@components/Footer.astro';
import GlobalSection from '@components/GlobalSection.astro';
import { getCollection } from 'astro:content';
import BlogItem from '@components/blog/BlogItem.astro';
import BlogFilters from '@components/blog/BlogFilters.astro';
import BlogPagination from '@components/blog/BlogPagination.astro';
import { getCollectionEntry } from '@utils/collectionUtils';
import config from '@data/siteConfig.json';

export async function getStaticPaths() {
  const categories = await getCollection('categories');
  return categories.map((category) => ({
    params: { slug: category.id },
    props: { category },
  }));
}

const { category } = Astro.props;
const { slug } = Astro.params;

// Get all blog posts in this category
const allPosts = await getCollection('blog', ({ data }) => {
  return !data.draft && data.categories?.includes(slug) && new Date(data.date) <= new Date();
});

const sortedPosts = allPosts.sort((a, b) => {
  return new Date(b.data.date).getTime() - new Date(a.data.date).getTime();
});

// Set up pagination
const pageSize = config.pageSize;
const currentPage = 1;
const totalItems = sortedPosts.length;
const totalPages = Math.ceil(totalItems / pageSize);
const currentPageData = sortedPosts.slice(0, pageSize);

// Get author data for current page posts
const postsWithAuthors = await Promise.all(
  currentPageData.map(async (post) => {
    let authorData = null;
    if (post.data.author) {
      authorData = await getCollectionEntry('authors', post.data.author);
    }
    return { post, authorData };
  })
);

// Pagination setup
const baseUrl = `/blog/${slug}`;
const prevUrl = undefined; // First page
const nextUrl = totalPages > 1 ? `${baseUrl}/${currentPage + 1}` : undefined;

const subtitle = 'Blog';
const title = category.data.name;
const icon = 'book-image';
---

<Layout
  title={`${category.data.name} - Category`}
  description={category.data.description}
  bodyClass="blog-page"
>
  <section class="datum-container">
    <Hero class="light" iconName={icon} title={title} subtitle={subtitle} />

    <div class="section--block section--block--pad bg-navy dark">
      <div class="relative m-auto md:max-w-391">
        <!-- Hidden meta tag to identify this as a category page -->
        <span data-pagefind-meta="page_type" style="display: none;">category</span>

        <!-- Category Filters and Search -->
        <BlogFilters currentCategory={slug} />

        <!-- Blog List -->
        <div class="blog-list">
          {
            postsWithAuthors.map(({ post, authorData }) => (
              <BlogItem post={post} authorData={authorData} />
            ))
          }
        </div>

        <!-- Pagination -->
        {
          totalPages > 1 && (
            <BlogPagination
              currentPage={currentPage}
              totalPages={totalPages}
              baseUrl={baseUrl}
              prevUrl={prevUrl}
              nextUrl={nextUrl}
            />
          )
        }
      </div>
    </div>

    <GlobalSection />

    <Footer />
  </section>
</Layout>
