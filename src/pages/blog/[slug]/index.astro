---
import Layout from '@layouts/Layout.astro';
import { getCollection } from 'astro:content';
import config from '@data/siteConfig.json';
import Pagination from '@components/Pagination.astro';
import BlogListItem from '@components/BlogListItem.astro';
import CategoryFilter from '@components/CategoryFilter.astro';

export async function getStaticPaths() {
  const categories = await getCollection('categories');
  return categories.map((category) => ({
    params: { slug: category.id },
    props: { category },
  }));
}

const { category } = Astro.props;
const { slug } = Astro.params;

// Get all blog posts in this category
const allPosts = await getCollection('blog', ({ data }) => {
  return !data.draft && data.categories?.includes(slug) && new Date(data.date) <= new Date();
});

const sortedPosts = allPosts.sort((a, b) => {
  return new Date(b.data.date).getTime() - new Date(a.data.date).getTime();
});

// Set up pagination
const pageSize = config.pageSize;
const currentPage = 1;
const totalItems = sortedPosts.length;
const totalPages = Math.ceil(totalItems / pageSize);
const currentPageData = sortedPosts.slice(0, pageSize);
---

<Layout title={`${category.data.name} - Category`} description={category.data.description}>
  <div class="mx-auto max-w-7xl">
    <div class="mb-8" data-pagefind-body>
      <!-- Hidden meta tag to identify this as a category page -->
      <span data-pagefind-meta="page_type" style="display: none;">category</span>

      <div class="mb-8">
        <h1 class="font-heading text-4xl font-bold">{category.data.name}</h1>
        {category.data.description && <p class="mt-2 text-gray-600">{category.data.description}</p>}
      </div>

      <!-- Category Filter -->
      <CategoryFilter currentCategory={slug} />

      <!-- Blog List -->
      <div class="blog-list bg-white">
        {currentPageData.map((post) => <BlogListItem post={post} />)}
      </div>

      {
        totalPages > 1 && (
          <div class="pagination">
            <Pagination
              currentPage={currentPage}
              totalPages={totalPages}
              baseUrl={`/blog/${slug}`}
              nextUrl={totalPages > 1 ? `/blog/${slug}/${currentPage + 1}` : undefined}
            />
          </div>
        )
      }
    </div>
  </div>
</Layout>
