---
import { getCollection } from 'astro:content';
import Layout from '@layouts/Layout.astro';
import { getEntry } from 'astro:content';
import { formatLongDate, formatISODate } from '@utils/dateUtils';

const changelogEntries = await getCollection('changelog');
const sortedEntries = changelogEntries.sort((a, b) => {
  const versionA = parseFloat(a.data.version);
  const versionB = parseFloat(b.data.version);
  return versionB - versionA;
});
const page = await getEntry('pages', 'changelog');
---

<Layout title={page?.data.title || 'Datum'} description={page?.data.description}>
  <main class="container mx-auto px-4 py-8">
    <h1 class="mb-8 text-4xl font-bold">Changelog</h1>

    <div class="mx-auto space-y-12">
      {
        sortedEntries.map((entry) => (
          <article class="border-b border-gray-200 pb-8 last:border-0">
            <div class="mb-2 flex items-baseline gap-4">
              <h2 class="text-2xl font-semibold">v{entry.data.version}</h2>
              {entry.data.date && (
                <time class="text-gray-600" datetime={formatISODate(entry.data.date)}>
                  {formatLongDate(entry.data.date)}
                </time>
              )}
            </div>

            <h3 class="mb-4 text-xl font-medium">{entry.data.title}</h3>

            <div class="prose prose-gray max-w-none">
              {entry.data.description && <p class="mb-4 text-gray-600">{entry.data.description}</p>}
              <div class="mt-4">
                <div set:html={entry.rendered?.html} />
              </div>
            </div>
          </article>
        ))
      }
    </div>
  </main>
</Layout>
