---
import '@v1/styles/page-features.css';
import Layout from '@layouts/Layout.astro';
import Hero from '@components/Hero.astro';
import Footer from '@components/Footer.astro';
import Table from '@components/features/Table.astro';
import Grids from '@components/features/Grids.astro';
import Cards from '@components/features/Cards.astro';

import ImageHero from '@v1/assets/images/hero-small-illustration.png';
import ImageConsole from '@v1/assets/images/console-2.png';
import ImageTwoMen from '@v1/assets/images/two-men.png';
import ImageLight from '@v1/assets/images/light-trail.png';

import type { FeaturesDataProps } from '@/src/types/features';

import { Image } from 'astro:assets';
import { getCollectionEntry } from '@utils/collectionUtils';
import { getEntries } from 'astro:content';
import { marked } from 'marked';

const page = await getCollectionEntry('features', 'index');
const fm = page.data;

const firstContents: Array<{
  data: FeaturesDataProps;
  body: string;
}> = await getEntries(page.data.sections.first);

const secondContents: Array<{
  data: FeaturesDataProps;
  body: string;
}> = await getEntries(page.data.sections.second);

const thirdContents: Array<{
  data: FeaturesDataProps;
  body: string;
}> = await getEntries(page.data.sections.third);

// SEO
const meta = fm.meta || {};
const title = fm.title ? fm.title : 'Datum Features';
const description = fm.description;
---

<Layout title={title} description={description} bodyClass="page-features" meta={meta}>
  <section class="datum-container overflow-clip">
    <Hero
      class="light"
      iconName="goal"
      imagePath={ImageHero}
      title={title}
      description={description}
      subtitle={fm.subtitle}
    />

    {
      firstContents[0] && (
        <div class="section--block section--block--pad bg-midnight-fjord dark pb-22">
          <div class="absolute top-1/2 -right-26 z-20 inline-block max-w-149 -translate-y-1/2">
            <Image
              src={ImageLight}
              alt="Light Trail"
              class="relative h-auto w-[670px] -rotate-45"
            />
          </div>
          <div class="max-width">
            <Table>
              <h2 slot="header">{firstContents[0].data.title}</h2>
              <div slot="description" set:html={marked.parse(firstContents[0].body)} />

              <div slot="features">
                <h3>Key features</h3>
                <ul>
                  {firstContents[0].data.keyFeatures.map((feature) => (
                    <li>{feature}</li>
                  ))}
                </ul>
              </div>

              <div slot="benefits">
                <h3>Benefits</h3>
                <p>{firstContents[0].data.benefits}</p>
              </div>

              <div slot="audience">
                <h3>Perfect for</h3>
                <ul>
                  {firstContents[0].data.perfectFor.map((item) => (
                    <li>{item}</li>
                  ))}
                </ul>
              </div>
            </Table>
          </div>
        </div>
      )
    }

    {
      firstContents[1] && (
        <div class="section--block section--block--pad bg-midnight-fjord dark overflow-visible pt-0">
          <div class="max-width relative">
            <div class="absolute top-0 left-15 z-30 inline-block -translate-y-full">
              <Image
                src={ImageTwoMen}
                alt="Two Men"
                class="relative h-auto w-[60px] md:w-[110px]"
                data-scroll-effect="parallax"
                data-scroll-speed="0.1"
                data-scroll-direction="down"
                data-viewport-offset="-200"
                data-max-movement="50"
              />
            </div>
            <Table class="z-40">
              <h2 slot="header">Networks</h2>

              <div slot="description" set:html={marked.parse(firstContents[1].body)} />

              <div slot="features">
                <h3>Key features</h3>
                <ul>
                  {firstContents[1].data.keyFeatures.map((feature) => (
                    <li>{feature}</li>
                  ))}
                </ul>
              </div>

              <div slot="benefits">
                <h3>Benefits</h3>
                <p>{firstContents[1].data.benefits}</p>
              </div>

              <div slot="audience">
                <h3>Perfect for</h3>
                <ul>
                  {firstContents[1].data.perfectFor.map((item) => (
                    <li>{item}</li>
                  ))}
                </ul>
              </div>
            </Table>
          </div>

          <div class="absolute bottom-1/2 -left-30 z-20 block w-auto max-w-2/3 translate-y-1/2">
            <Image src={ImageLight} alt="Light Trail" class="relative h-auto w-[650px]" />
          </div>
        </div>
      )
    }

    <div class="section--block section--block--pad bg-glacier-mist-800">
      <div class="max-width">
        <Grids features={secondContents} />
      </div>
    </div>

    <div class="section--block section--block--pad bg-aurora-moss pb-55 md:pb-28 lg:pb-42">
      <div
        class="absolute top-auto -right-10 -bottom-10 z-10 block w-auto max-w-114 lg:top-1/2 lg:-right-20 lg:bottom-auto lg:-translate-y-1/2 2xl:right-0"
      >
        <Image src={ImageConsole} alt="Console" class="relative" />
      </div>
      <div class="max-width">
        <Cards features={thirdContents} />
      </div>
    </div>
    <Footer />
  </section>
</Layout>
