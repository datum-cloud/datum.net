---
import { getCollection, render } from 'astro:content';
import { getCollectionEntry } from '@utils/collectionUtils';
import { Image } from 'astro:assets';

import Layout from '@layouts/Handbook.astro';
import Sidebar from '@components/handbook/Sidebar.astro';
import Nav from '@components/handbook/Nav.astro';

export async function getStaticPaths() {
  const handbooks = await getCollection('handbooks');

  handbooks.sort(function (a, b) {
    let aSlugSplit = a.id.split('/');
    let bSlugSplit = b.id.split('/');

    // sort by order with category
    return ('' + aSlugSplit[0] + a.data.sidebar.order).localeCompare(
      '' + bSlugSplit[0] + b.data.sidebar.order
    );
  });

  return handbooks.map((entry) => {
    return {
      params: { slug: entry.id },
      props: { entry: render(entry), handbooks },
    };
  });
}

const { entry, handbooks } = Astro.props;
const { Content } = await entry; // { headings } to collect headings
const currentPostIndex = handbooks.findIndex((post) => post.id == Astro.params.slug);

let authors = handbooks[currentPostIndex].data.authors
  ? handbooks[currentPostIndex].data.authors.replace(/\s/g, '').split(',')
  : [];

var authorData: Array<{ data: { avatar?: string; name: string } }> = [];

for (const author of authors) {
  let data = await getCollectionEntry('authors', author);
  authorData.push(data);
}
---

<Layout title="Datum" description="Datum Handbook">
  <section
    id="content"
    class="mx-auto min-h-[100dvh] w-full max-w-5xl space-y-8 px-6 pt-6 pb-0 md:max-w-7xl"
  >
    <div class="flex min-h-[40rem] flex-col items-start justify-start gap-8 md:flex-row md:gap-16">
      <Sidebar current={handbooks[currentPostIndex].id} />

      <div class="relative flex w-full flex-col gap-4 md:w-[unset] md:shrink md:grow md:basis-0">
        <h1 class="text-blackberry-800 text-6xl font-semibold">
          {handbooks[currentPostIndex].data.title}
        </h1>

        <p class="mb-6 text-xl font-light text-gray-600">
          {
            handbooks[currentPostIndex].data ? (
              <div class="mt-2 mb-12 flex">
                <ul class="text-blackberry-600 w-full text-sm">
                  {handbooks[currentPostIndex]?.data?.readingTime ? (
                    <li class="border-blackberry-300 flex w-full justify-between border-b py-2">
                      Reading time:{' '}
                      <div class="text-blackberry-700">
                        {handbooks[currentPostIndex].data.readingTime}
                      </div>
                    </li>
                  ) : null}
                  {handbooks[currentPostIndex]?.data?.updatedDate ? (
                    <li class="border-blackberry-300 flex w-full justify-between border-b py-2">
                      Updated:{' '}
                      <div class="text-blackberry-700">
                        {handbooks[currentPostIndex].data.updatedDate}
                      </div>
                    </li>
                  ) : null}
                  {handbooks[currentPostIndex]?.data?.authors ? (
                    <li class="border-blackberry-300 flex w-full justify-between border-b py-2">
                      Authors:
                      <div class="text-blackberry-700 flex gap-1">
                        {authorData.map((author) => {
                          return author.data.avatar ? (
                            <Image
                              src={author.data.avatar}
                              alt={author.data.name}
                              class="bg-blackberry-900 h-6 w-6 rounded-full object-cover"
                              width={64}
                              height={64}
                            />
                          ) : (
                            <div class="bg-blackberry-800 mr-3 flex h-10 w-10 items-center justify-center rounded-full">
                              <span class="text-lg font-bold text-gray-600">
                                {author.data.name ? author.data.name.charAt(0) : ''}
                              </span>
                            </div>
                          );
                        })}
                      </div>
                    </li>
                  ) : null}
                </ul>
              </div>
            ) : null
          }

          <div class="prose lg:prose-xl max-w-none">
            <Content />
          </div>
          <Nav currentIndex={currentPostIndex} collection={handbooks} />
        </p>
      </div>
    </div>
  </section>
</Layout>
