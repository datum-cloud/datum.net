---
import '@v1/styles/page-handbook.css';
import Layout from '@layouts/Layout.astro';
import Hero from '@components/Hero.astro';
import Footer from '@components/Footer.astro';
import Article from '@components/handbook/Article.astro';

import { getCollection, render } from 'astro:content';
import { getCollectionEntry } from '@utils/collectionUtils';

// const currentPostIndex = handbooks.findIndex((post) => post.id == Astro.params.slug);
export async function getStaticPaths() {
  const handbooks = await getCollection('handbooks', ({ id }) => id !== 'index');

  handbooks.sort(function (a, b) {
    let aSlugSplit = a.id.split('/');
    let bSlugSplit = b.id.split('/');

    // sort by order with category
    return ('' + aSlugSplit[0] + a.data.sidebar.order).localeCompare(
      '' + bSlugSplit[0] + b.data.sidebar.order
    );
  });

  // Extract headings for each handbook entry
  const renderedEntries = await Promise.all(
    handbooks.map(async (entry) => {
      const rendered = await render(entry);
      return {
        entry,
        rendered,
        headings: rendered.headings,
      };
    })
  );

  return renderedEntries.map(({ entry, rendered, headings }) => {
    return {
      params: {
        slug: entry.id,
      },
      props: { entry: rendered, handbooks, headings },
    };
  });
}

const page = await getCollectionEntry('handbooks', 'index');
const fm = page.data;

const { slug } = Astro.params;
const { entry, headings } = Astro.props;
const { title, description, meta } = entry.remarkPluginFrontmatter;

const pageTitle = title ? fm.title + ' - ' + title : fm.title;
const pageDescription = description ? description : 'The Datum Handbook';
---

<Layout title={pageTitle} description={pageDescription} bodyClass="handbook-page" meta={meta}>
  <section class="datum-container">
    <Hero class="light bg-glacier-mist-700 border-glacier-mist-900 border-b-1" hideContent={true} />
    <Article articleId={slug} headings={headings} />

    <Footer />
  </section>
</Layout>
